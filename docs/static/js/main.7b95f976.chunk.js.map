{"version":3,"sources":["Redux/constants/index.js","components/TablaGatos.jsx","Redux/actions/gastosActions.js","Redux/actions/sueldoActions.js","components/MenuActiones.jsx","components/MenuApp.jsx","hooks/useForm.js","Redux/reducers/gastosReducer.js","Redux/reducers/sueldoReducer.js","Redux/reducers/index.js","Redux/store.js","App.js","index.js"],"names":["types","TablaGatos","React","memo","gastos","useSelector","state","dispatch","useDispatch","quitar","id","precio","type","payload","quitarGasto","sumarSaldo","parseInt","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","align","TableBody","map","gasto","i","border","scope","nombre","Button","onClick","color","variant","startIcon","MenuActiones","nombreGasto","preSueldo","reset","gastoTotal","editarSueldo","valor","length","establecerSaldo","Box","borderRadius","margin","display","padding","justifyContent","trim","nuevoGasto","Date","getTime","agregarGasto","localStorage","clear","MenuApp","dinero","sueldo","saldo","initialState","useState","values","setValues","target","value","name","useForm","handleInputChange","useEffect","setItem","JSON","stringify","width","textAlign","Input","onChange","placeholder","required","gastosGuardados","parse","getItem","sueldoGuardado","reducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b95f976.chunk.js","sourcesContent":["export const types = {\n  agregarGasto: \"[Gasto] Agregar\",\n  quitarGasto: \"[Gasto] Restar\",\n\n  establecerSueldo: \"[Sueldo] Establecer\",\n  establecerSaldo: \"[Saldo] Establecer\",\n  restarSaldo: \"[Sueldo] Restar\",\n  sumarSaldo: \"[Sueldo] Sumar\",\n};\n","import React from \"react\";\nimport { Button } from \"@mui/material\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { quitarGasto } from \"../Redux/actions/gastosActions\";\nimport { sumarSaldo } from \"../Redux/actions/sueldoActions\";\n\nexport const TablaGatos = React.memo(() => {\n  const { gastos } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const quitar = (id, precio) => {\n    dispatch(quitarGasto(id));\n    dispatch(sumarSaldo(parseInt(precio)));\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 600 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">#</TableCell>\n            <TableCell align=\"center\">Nombre del Gasto</TableCell>\n            <TableCell align=\"center\">Precio</TableCell>\n            <TableCell align=\"center\">Acciones</TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {gastos.map((gasto, i = 1) => (\n            <TableRow\n              key={gasto.id}\n              sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n            >\n              <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                {i + 1}\n              </TableCell>\n              <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                {gasto.nombre}\n              </TableCell>\n              <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                {gasto.precio}\n              </TableCell>\n              <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                <Button\n                  onClick={() => quitar(gasto.id, gasto.precio)}\n                  color=\"error\"\n                  variant=\"outlined\"\n                  startIcon={<RemoveIcon />}\n                >\n                  Quitar Gasto\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n});\n","import { types } from \"../constants\";\n\nexport const agregarGasto = (nuevoGasto) => ({\n  type: types.agregarGasto,\n  payload: nuevoGasto,\n});\n\nexport const quitarGasto = (id) => ({\n  type: types.quitarGasto,\n  payload: id,\n});\n","import { types } from \"../constants\";\n\nexport const establecerSueldo = (valor) => ({\n  type: types.establecerSueldo,\n  payload: valor,\n});\n\nexport const establecerSaldo = (gastoTotal) => ({\n  type: types.establecerSaldo,\n  payload: gastoTotal,\n});\n\nexport const restarSaldo = (gasto) => ({\n  type: types.restarSaldo,\n  payload: gasto,\n});\n\nexport const sumarSaldo = (precio) => ({\n  type: types.sumarSaldo,\n  payload: precio,\n});\n","import { Box, Button } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  establecerSaldo,\n  establecerSueldo,\n  restarSaldo,\n} from \"../Redux/actions/sueldoActions\";\nimport { agregarGasto } from \"../Redux/actions/gastosActions\";\n\nexport const MenuActiones = ({ nombreGasto, precio, preSueldo, reset }) => {\n  const dispatch = useDispatch();\n  const { gastos } = useSelector((state) => state);\n\n  let gastoTotal = 0;\n  gastos.map((gasto) => (gastoTotal += parseInt(gasto.precio)));\n  const agregar = () => {\n    if (nombreGasto.trim().length <= 1 || precio <= 0) {\n      return;\n    }\n    const nuevoGasto = {\n      id: new Date().getTime(),\n      nombre: nombreGasto,\n      precio: precio,\n    };\n    dispatch(agregarGasto(nuevoGasto));\n    dispatch(restarSaldo(precio));\n  };\n\n  const editarSueldo = () => {\n    if (preSueldo.length <= 1) {\n      return;\n    }\n    dispatch(establecerSueldo(parseInt(preSueldo)));\n    dispatch(establecerSaldo(gastoTotal));\n  };\n  const borrarTodo = () => {\n    localStorage.clear();\n    reset();\n  };\n\n  return (\n    <Box\n      sx={{\n        border: \"solid 1px\",\n        borderRadius: \"5px\",\n        color: \"#2278CF\",\n        margin: \"20px 0px\",\n        display: \"flex\",\n        padding: \"10px\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Button\n        type=\"button\"\n        onClick={() => editarSueldo()}\n        variant=\"outlined\"\n        startIcon={<EditIcon />}\n      >\n        Cambiar Sueldo\n      </Button>\n\n      <Button\n        type=\"button\"\n        onClick={agregar}\n        color=\"success\"\n        variant=\"outlined\"\n        startIcon={<AddIcon />}\n      >\n        Agregar Gasto\n      </Button>\n\n      <Button\n        type=\"button\"\n        onClick={() => borrarTodo()}\n        color=\"error\"\n        variant=\"outlined\"\n        startIcon={<AddIcon />}\n      >\n        Borrar Memoria\n      </Button>\n    </Box>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { Box, Input } from \"@mui/material\";\nimport { useForm } from \"../hooks/useForm\";\nimport { useSelector } from \"react-redux\";\nimport { TablaGatos } from \"./TablaGatos\";\nimport { MenuActiones } from \"./MenuActiones\";\n\nexport const MenuApp = () => {\n  const {\n    dinero: { sueldo, saldo },\n    gastos,\n  } = useSelector((state) => state);\n  const [{ precio, nombreGasto, preSueldo }, handleInputChange, reset] =\n    useForm({\n      precio: 0,\n      nombreGasto: \"\",\n      preSueldo: sueldo,\n    });\n\n  useEffect(() => {\n    localStorage.setItem(\"gastos\", JSON.stringify(gastos));\n  }, [gastos]);\n\n  useEffect(() => {\n    localStorage.setItem(\"dinero\", JSON.stringify({ sueldo, saldo }));\n  }, [sueldo, saldo]);\n\n  return (\n    <>\n      <Box\n        sx={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"space-evenly\",\n          textAlign: \"center\",\n        }}\n      >\n        <h1>Control de Gastos</h1>\n      </Box>\n      <Box\n        sx={{\n          width: \"100%\",\n          display: \"flex\",\n          border: \"solid 1px\",\n          borderRadius: \"5px\",\n          color: \"#2278CF\",\n          justifyContent: \"space-evenly\",\n          textAlign: \"center\",\n        }}\n      >\n        <h3>Sueldo mensual: {!sueldo ? 0 : sueldo} </h3>\n        <h3>Dinero Disponible: {!saldo ? 0 : saldo} </h3>\n      </Box>\n\n      <Box\n        sx={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"space-evenly\",\n          margin: \"15px\",\n        }}\n      >\n        <Input\n          onChange={handleInputChange}\n          value={preSueldo}\n          type=\"number\"\n          placeholder=\"Sueldo\"\n          required={true}\n          name=\"preSueldo\"\n        />\n\n        <Input\n          type=\"text\"\n          placeholder=\"Gasto\"\n          required={true}\n          values={nombreGasto}\n          onChange={handleInputChange}\n          name=\"nombreGasto\"\n        />\n\n        <Input\n          type=\"number\"\n          placeholder=\"Precio\"\n          variant=\"standard\"\n          required={true}\n          values={precio}\n          onChange={handleInputChange}\n          name=\"precio\"\n        />\n      </Box>\n      <MenuActiones\n        nombreGasto={nombreGasto}\n        precio={precio}\n        preSueldo={preSueldo}\n        reset={reset}\n      />\n      <TablaGatos />\n    </>\n  );\n};\n","import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const reset = () => {\n    setValues(initialState);\n  };\n\n  const handleInputChange = ({ target }) => {\n    if (target.value.length > 8) {\n      target.value = \"\";\n    }\n    setValues({\n      ...values,\n      [target.name]: target.value,\n    });\n  };\n\n  return [values, handleInputChange, reset];\n};\n","import { types } from \"../constants\";\n\nconst gastosGuardados = JSON.parse(localStorage.getItem(\"gastos\")) || [];\n\nexport const gastosReducer = (state = gastosGuardados, action) => {\n  switch (action.type) {\n    case types.agregarGasto:\n      return [...state, action.payload];\n    case types.quitarGasto:\n      return state.filter((gasto) => gasto.id !== action.payload);\n    default:\n      return state;\n  }\n};\n","import { types } from \"../constants\";\n\nconst sueldoGuardado = JSON.parse(localStorage.getItem(\"dinero\")) || {\n  sueldo: 0,\n  saldo: 0,\n};\n\nexport const sueldoReducer = (state = sueldoGuardado, action) => {\n  switch (action.type) {\n    case types.establecerSueldo:\n      return { ...state, sueldo: action.payload };\n    case types.establecerSaldo:\n      return { ...state, saldo: state.sueldo - action.payload };\n\n    case types.restarSaldo:\n      if (!state.saldo) {\n        return { ...state, saldo: state.sueldo - action.payload };\n      }\n      return { ...state, saldo: state.saldo - action.payload };\n    case types.sumarSaldo:\n      return { ...state, saldo: state.saldo + action.payload };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { gastosReducer } from \"./gastosReducer\";\nimport { sueldoReducer } from \"./sueldoReducer\";\n\nconst reducers = combineReducers({\n  gastos: gastosReducer,\n  dinero: sueldoReducer,\n});\n\nexport default reducers;\n","import { createStore, compose } from \"redux\";\nimport reducers from \"./reducers/index\";\n\nconst composeEnhancers =\n  (typeof window !== \"undefined\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst store = createStore(reducers, composeEnhancers());\n\nexport default store;\n","import { Provider } from \"react-redux\";\nimport { MenuApp } from \"./components/MenuApp\";\nimport store from \"./Redux/store\";\n\nconst App = () => {\n  return (\n    <>\n      <Provider store={store}>\n        <MenuApp />\n      </Provider>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}